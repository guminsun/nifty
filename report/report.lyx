#LyX 1.6.9 created this file. For more info see http://www.lyx.org/
\lyxformat 345
\begin_document
\begin_header
\textclass report
\use_default_options true
\language english
\inputencoding auto
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\cite_engine basic
\use_bibtopic false
\paperorientation portrait
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\defskip medskip
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\author "" 
\author "" 
\end_header

\begin_body

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Chapter
Introduction
\end_layout

\begin_layout Section
Background
\end_layout

\begin_layout Standard
XXX
\end_layout

\begin_layout Section
Problem Description
\end_layout

\begin_layout Standard
XXX
\end_layout

\begin_layout Section
Motivation
\end_layout

\begin_layout Standard
XXX
\end_layout

\begin_layout Chapter
Methodology
\end_layout

\begin_layout Section
Understanding the Input Format
\end_layout

\begin_layout Standard
XXX Current NJOY Input Format (
\family typewriter
CNIF
\family default
).
\end_layout

\begin_layout Section
Writing a Grammar
\end_layout

\begin_layout Standard
XXX define a grammar for the new input format?
\end_layout

\begin_layout Subsection
Scope and Structure
\end_layout

\begin_layout Itemize
static scope? only top-level declarations?
\end_layout

\begin_layout Itemize
block structure? e.g.
 
\family typewriter
module { 
\shape italic
variable-declarations
\shape default
 }
\end_layout

\begin_layout Section
Building a Compiler
\end_layout

\begin_layout Subsection
Lexical Analysis
\end_layout

\begin_layout Standard
XXX
\end_layout

\begin_layout Itemize
Use a lexical analyzer to generate tokens and detect errors?
\end_layout

\begin_layout Subsubsection
Tokens
\end_layout

\begin_layout Standard
XXX
\end_layout

\begin_layout Itemize

\family typewriter
<
\family default
\shape italic
token-name
\shape default
, 
\shape italic
attribute-value
\family typewriter
\shape default
>
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="3" columns="3">
<features>
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
TOKEN
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
DESCRIPTION
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
EXAMPLE
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
module
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
reconr
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
number
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
3.14
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsubsection
Patterns
\end_layout

\begin_layout Standard
XXX should patterns be described?
\end_layout

\begin_layout Subsubsection
Lexemes
\end_layout

\begin_layout Standard
XXX should lexemes be described?
\end_layout

\begin_layout Subsubsection
Comments
\end_layout

\begin_layout Standard
XXX investigate the possibility to use comments in the input?
\end_layout

\begin_layout Subsection
Syntactic Analysis
\end_layout

\begin_layout Standard
XXX
\end_layout

\begin_layout Itemize
Use a parser generator such as YACC which can detect and report syntax errors?
\end_layout

\begin_layout Subsection
Semantic Analysis
\end_layout

\begin_layout Standard
XXX
\end_layout

\begin_layout Itemize
Enforce a type system? Type and scope rules defined by grammar.
\end_layout

\begin_layout Itemize
Detect and report errors?
\end_layout

\begin_layout Subsection
Translation Process
\end_layout

\begin_layout Standard
XXX Code generation.
 No intermediate code necessary.
\end_layout

\begin_layout Itemize
process of translating the 
\shape italic
source
\shape default
 language (new input format) into the 
\shape italic
target
\shape default
 language (old input format)?
\end_layout

\begin_layout Itemize
detect and report errors?
\end_layout

\begin_layout Chapter
Implementation
\end_layout

\begin_layout Standard
XXX Python, {functional, object oriented} approach?
\end_layout

\begin_layout Section
NJOY Input Format (
\family typewriter
NIF
\family default
)
\end_layout

\begin_layout Itemize
Describe design?
\end_layout

\begin_layout Itemize
Grammar Definition File?
\end_layout

\begin_layout Section
NJOY Input Format Translator (
\family typewriter
nifty
\family default
)
\end_layout

\begin_layout Itemize
Python Lex?
\end_layout

\begin_layout Itemize
Python YACC?
\end_layout

\begin_layout Subsection
Code Generation
\end_layout

\begin_layout Standard
XXX generating the 
\shape italic
target
\shape default
 language instructions?
\end_layout

\begin_layout Chapter
Results
\end_layout

\begin_layout Section
XXX
\end_layout

\begin_layout Standard
XXX
\end_layout

\begin_layout Chapter
Discussion
\end_layout

\begin_layout Section
XXX
\end_layout

\begin_layout Standard
XXX
\end_layout

\begin_layout Chapter
Conclusion
\end_layout

\begin_layout Itemize
Improvement on the existing situation?
\end_layout

\begin_layout Section
Future Work
\end_layout

\begin_layout Itemize
Possible improvements?
\end_layout

\begin_layout Itemize
Complete context-free grammar?
\end_layout

\begin_layout Itemize
GUI?
\end_layout

\begin_layout Itemize
Efficient implementation, e.g.
 C with pthreads?
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "key-2"

\end_inset

XXX
\end_layout

\end_body
\end_document
