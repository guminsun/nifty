#LyX 1.6.9 created this file. For more info see http://www.lyx.org/
\lyxformat 345
\begin_document
\begin_header
\textclass article
\begin_preamble
\usepackage[nottoc]{tocbibind}
\end_preamble
\use_default_options true
\language english
\inputencoding auto
\font_roman lmodern
\font_sans lmss
\font_typewriter lmtt
\font_default_family default
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\paperfontsize 12
\spacing double
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\cite_engine basic
\use_bibtopic false
\paperorientation portrait
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\defskip medskip
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\author "" 
\author "" 
\end_header

\begin_body

\begin_layout Standard
\paragraph_spacing single
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
thispagestyle{empty}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
thispagestyle{empty}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\align center

\family typewriter
\begin_inset space ~
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
setcounter{page}{1}
\end_layout

\end_inset


\end_layout

\begin_layout Section
Introduction
\end_layout

\begin_layout Subsection
Background
\end_layout

\begin_layout Standard
The NJOY Nuclear Data Processing System 
\begin_inset CommandInset citation
LatexCommand cite
key "key-1"

\end_inset

 is a software system used for nuclear data management.
 In particular, it is used to convert Evaluated Nuclear Data Files (ENDF)
 
\begin_inset CommandInset citation
LatexCommand cite
key "key-2"

\end_inset

 into different formats, as well as performing operations on the nuclear
 data.
\end_layout

\begin_layout Standard
NJOY is currently being used within the MACRO project 
\begin_inset CommandInset citation
LatexCommand cite
key "key-3"

\end_inset

 at the Division of Applied Nuclear Physics, at the Department of Physics
 and Astronomy at Uppsala University.
\end_layout

\begin_layout Subsection
Problem Description
\end_layout

\begin_layout Standard
The NJOY input instructions 
\begin_inset CommandInset citation
LatexCommand cite
key "key-4"

\end_inset

 are complex and hard to read compared to e.g.
 a high-level programming language.
 For example, algorithm 1 is a 
\emph on
short
\emph default
 and 
\emph on
simple
\emph default
 NJOY job which illustrates what the input instructions look like.
\begin_inset Float algorithm
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset listings
lstparams "basicstyle={\small\ttfamily},breaklines=true,numbers=left,numberstyle={\footnotesize}"
inline false
status open

\begin_layout Plain Layout

acer
\end_layout

\begin_layout Plain Layout

20 21 0 31 32
\end_layout

\begin_layout Plain Layout

1 0 1/
\end_layout

\begin_layout Plain Layout

'proton + 7-n-14 apt la150 njoy99 mcnpx'/
\end_layout

\begin_layout Plain Layout

725 0./
\end_layout

\begin_layout Plain Layout

/
\end_layout

\begin_layout Plain Layout

/
\end_layout

\begin_layout Plain Layout

acer
\end_layout

\begin_layout Plain Layout

0 31 33 34 35
\end_layout

\begin_layout Plain Layout

7 1 2/
\end_layout

\begin_layout Plain Layout

'proton + 7-n-14 apt la150 njoy99 mcnpx'/
\end_layout

\begin_layout Plain Layout

viewr
\end_layout

\begin_layout Plain Layout

33 36/
\end_layout

\begin_layout Plain Layout

stop
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
NJOY Test Problem 14
\end_layout

\end_inset


\end_layout

\end_inset

Without consulting the documentation, one might guess that line 4 and 11
 are some kind of descriptive titles, which is correct.
 However, it is not obvious that line 2 denotes input and output files (each
 number indicates a specific file) that the 
\family typewriter
acer
\family default
 module will operate on.
 It is also hard to deduce that the first number on line 5 denotes the material
 to be processed, and that the second number denotes the desired temperature
 in kelvin.
\end_layout

\begin_layout Standard
The input instructions can be annotated with descriptive comments, but even
 then, working with a large and complex job easily becomes a daunting task.
\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Subsection
Objective
\end_layout

\begin_layout Standard
The NJOY input instructions is not an optimal input format.
 Therefore, the scope of this thesis has been to design and implement a
 more user friendly, and readable input format.
 The design of the new input format had to be based on some commonly known
 existing format that is fitting to the task.
 The basis could for example be a programming language.
\end_layout

\begin_layout Standard
In order to make the new input format useable with NJOY, it has to be translated
 into the original NJOY input instructions.
 As such, the scope of this work also included developing an accompanying
 translator for the new input format.
\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Section
Methodology
\end_layout

\begin_layout Subsection
Introduction
\end_layout

\begin_layout Standard
The NJOY input instructions had to be understood in order to design the
 new input format.
 Each module of the NJOY software system, as described in 
\begin_inset CommandInset citation
LatexCommand cite
key "key-4"

\end_inset

, was analyzed separately such that a general structure and common language
 features could be extracted and used for further analysis.
\end_layout

\begin_layout Standard
As stated in 
\begin_inset CommandInset citation
LatexCommand cite
key "key-5"

\end_inset

, a translator (
\shape italic
compiler
\shape default
) is a program that can read a program in one language and translate it
 into an equivalent program in another language.
 In the following subsections, principles and techniques for constructing
 a translator presented in 
\begin_inset CommandInset citation
LatexCommand cite
key "key-5"

\end_inset

, is described.
\end_layout

\begin_layout Subsection
Designing the New Input Format
\end_layout

\begin_layout Subsubsection
Syntax Definition
\end_layout

\begin_layout Standard
The syntax definition of the input format was specified in a notation called
 context-free grammar 
\begin_inset CommandInset citation
LatexCommand cite
key "key-6"

\end_inset

.
 A context-free grammar is a convenient, and natural method of specifying
 the syntax of a programming language.
 For instance, the assignment (
\shape italic
declaration
\shape default
) of an identifier can have the form
\end_layout

\begin_layout Standard
\align center

\family typewriter
material = 8225
\end_layout

\begin_layout Standard
which can be expressed in a context-free grammar as the production
\end_layout

\begin_layout Standard
\align center

\family typewriter
assignment ::= l_value 
\begin_inset Quotes eld
\end_inset

=
\begin_inset Quotes erd
\end_inset

 r_value
\end_layout

\begin_layout Standard
where 
\family typewriter
l_value
\family default
 and 
\family typewriter
r_value
\family default
 are other productions expressing the structure of the left and right hand
 side of the assignment, respectively.
\end_layout

\begin_layout Subsection
Building the Translator
\end_layout

\begin_layout Standard
In 
\begin_inset CommandInset citation
LatexCommand cite
key "key-5"

\end_inset

, the translation process is described as a sequence of phases.
 Each phase inspects and transforms a representation of the source program
 to another.
 Phases such as lexical analysis, syntax analysis, and semantic analysis
 has been used throughout this work.
\end_layout

\begin_layout Standard
The translator, which is supposed to translate the input format into NJOY
 input instructions, was partly constructed using a lexical-analyzer generator
 
\begin_inset CommandInset citation
LatexCommand cite
key "key-7"

\end_inset

 and a parser generator 
\begin_inset CommandInset citation
LatexCommand cite
key "key-8"

\end_inset

.
\end_layout

\begin_layout Standard
The translator was written in the Python programming language 
\begin_inset CommandInset citation
LatexCommand cite
key "key-9"

\end_inset

, in an Unix-like environment.
\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Subsubsection
Lexical Analysis
\end_layout

\begin_layout Standard
Lexical analysis is the process of dividing the source program into sequences
 of characters, called tokens 
\begin_inset CommandInset citation
LatexCommand cite
key "key-10"

\end_inset

.
 Each token describes a group of characters in the source program as an
 abstract type.
\end_layout

\begin_layout Standard
For example, the identifier 
\family typewriter
material
\family default
, the assignment character, 
\family typewriter
=
\family default
, and the integer 
\family typewriter
8225
\family default
 could be represented as tokens of the form
\end_layout

\begin_layout Description

\family typewriter
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

 <IDENTIFIER, material>
\family default
,
\end_layout

\begin_layout Description

\family typewriter
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

 <ASSIGNMENT, =>
\family default
, and
\end_layout

\begin_layout Description

\family typewriter
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

 <INTEGER, 8225>
\end_layout

\begin_layout Standard
PLY Lex 
\begin_inset CommandInset citation
LatexCommand cite
key "key-11"

\end_inset

 was used to generate a lexical analyzer (
\shape italic
lexer
\shape default
) for the input format.
 The method of identifying the tokens was implemented by using the notation
 of regular expressions 
\begin_inset CommandInset citation
LatexCommand cite
key "key-12"

\end_inset

 in PLY Lex.
\end_layout

\begin_layout Subsubsection
Syntax Analysis
\end_layout

\begin_layout Standard
Syntax analysis is the process of creating a tree-like representation, an
 abstract syntax tree, composed of the tokens generated by the lexical analyzer
 
\begin_inset CommandInset citation
LatexCommand cite
key "key-13"

\end_inset

.
 The syntax tree is used to describe the grammatical structure of the source
 program.
\end_layout

\begin_layout Standard
PLY Yacc 
\begin_inset CommandInset citation
LatexCommand cite
key "key-11"

\end_inset

 was used to generate a syntax analyzer (
\shape italic
parser
\shape default
) for the grammar definition of the input format.
 The method of building the syntax tree was implemented by using the facilities
 provided by the PLY tools.
\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Subsubsection
Semantic Analysis
\end_layout

\begin_layout Standard
Semantic analysis is the process of checking the syntax tree for errors
 that have to do with the 
\shape italic
meaning
\shape default
 of the program 
\begin_inset CommandInset citation
LatexCommand cite
key "key-14"

\end_inset

.
\end_layout

\begin_layout Standard
For example, according to 
\begin_inset CommandInset citation
LatexCommand cite
key "key-4"

\end_inset

, card 1, 2 and 3 in module 
\family typewriter
acer
\family default
 must always be defined, and they must be defined in sequential order.
 The translator should report an error if these rules are violated; such
 as when card 1 has not been defined or when card 3 has been defined prior
 to card 2.
\end_layout

\begin_layout Standard
Type checking is another important part of the semantic analysis where the
 translator checks that each operator has valid operands.
\end_layout

\begin_layout Standard
For example, the identifier 
\family typewriter
hk
\family default
, in card 3 module 
\family typewriter
acer
\family default
, is used to denote a descriptive character string.
 According to 
\begin_inset CommandInset citation
LatexCommand cite
key "key-4"

\end_inset

, 
\family typewriter
hk
\family default
 must be declared as a character string and must not exceed 70 characters
 in length.
 The translator should report an error if these rules are violated; such
 as when 
\family typewriter
hk
\family default
 has been declared as an integer, or when the character string contains
 more than 70 characters.
\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Subsection
Testing
\end_layout

\begin_layout Standard
Testing was carried out continuously during the design and implementation
 of the input format and the translator.
 The NJOY test problems
\begin_inset Foot
status open

\begin_layout Plain Layout
The NJOY Test Problems are test runs which are used to test the functionality
 of the NJOY software system.
 See 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://t2.lanl.gov/codes/njoy99/
\end_layout

\end_inset


\end_layout

\end_inset

 was used to test the functionality of both the input format and the translator.
\end_layout

\begin_layout Standard
The NJOY test problems was manually translated into equivalent NJOY jobs
 in the new input format, which were run through the translator.
 The resulting output was compared with the expected output, to verify that
 the translator was working appropriately.
\end_layout

\begin_layout Standard
The Python unit testing framework 
\begin_inset CommandInset citation
LatexCommand cite
key "key-9"

\end_inset

 was utilized to set up the testing environment.
\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Section
Results
\end_layout

\begin_layout Subsection
NJOY Input Format (
\family typewriter
NIF
\family default
)
\end_layout

\begin_layout Standard
The new input format, NJOY Input Format (NIF), is basically the NJOY input
 instructions which have been annotated with a syntax to make it easier
 to read and express.
 NIF has been designed to appear more like a high-level programming language.
 It was also designed to resemble the NJOY input instructions such that
 the documentation in 
\begin_inset CommandInset citation
LatexCommand cite
key "key-4"

\end_inset

 can be used when specifying NJOY jobs in NIF.
\end_layout

\begin_layout Subsubsection
Grammar Definition
\end_layout

\begin_layout Standard
The resulting NJOY Input Format (NIF) is illustrated as a context-free grammar
 definition in algorithm 2.
 The structure of the grammar is simple.
 Just like in 
\begin_inset CommandInset citation
LatexCommand cite
key "key-4"

\end_inset

, a NIF program is an ordered sequence of modules.
 Each module is composed by an ordered sequence of cards.
 A card is an ordered sequence of value deﬁnitions.
\end_layout

\begin_layout Standard
\begin_inset Float algorithm
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "basicstyle={\small\ttfamily},breaklines=true,tabsize=4"
inline false
status open

\begin_layout Plain Layout

program ::= module_list
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

module_list ::= module module_list
\end_layout

\begin_layout Plain Layout

              | empty
\end_layout

\begin_layout Plain Layout

module      ::= MODULE "{" card_list "}"
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

card_list ::= card card_list
\end_layout

\begin_layout Plain Layout

            | empty
\end_layout

\begin_layout Plain Layout

card      ::= CARD "{" stmt_list "}"
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

stmt_list  ::= statement stmt_list
\end_layout

\begin_layout Plain Layout

             | empty
\end_layout

\begin_layout Plain Layout

statement  ::= expression ";"
\end_layout

\begin_layout Plain Layout

expression ::= assignment
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

assignment ::= l_value_list "=" r_value_list
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

l_value_list ::= l_value
\end_layout

\begin_layout Plain Layout

			   | l_value "," l_value_list
\end_layout

\begin_layout Plain Layout

r_value_list ::= r_value
\end_layout

\begin_layout Plain Layout

			   | r_value "," r_value_list
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

l_value ::= array
\end_layout

\begin_layout Plain Layout

          | ident
\end_layout

\begin_layout Plain Layout

array   ::= IDENTIFIER "[" INTEGER "]"
\end_layout

\begin_layout Plain Layout

ident   ::= IDENTIFIER
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

r_value ::= FLOAT
\end_layout

\begin_layout Plain Layout

          | INTEGER
\end_layout

\begin_layout Plain Layout

		  | NULL
\end_layout

\begin_layout Plain Layout

          | STRING
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
NJOY Input Format (NIF) Grammar Definition
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
The start symbol is 
\family typewriter
program
\family default
.
 The capitalized terminals, such as 
\family typewriter
MODULE
\family default
 and 
\family typewriter
CARD
\family default
, are token classes specified by the lexer.
 Special symbols are denoted within double quotes.
 
\family typewriter
empty
\family default
 denotes the empty string.
\end_layout

\begin_layout Standard
An assignment denotes that a left hand side is assigned to hold the values
 of a right hand side.
 A left hand side is an ordered list of elements, where the elements can
 be an array or identifier.
 A right hand side is an ordered list of elements, where the elements can
 be a float, integer, null or a string.
 As such, a value definition is an array or identifier that has been declared
 to hold the value of either a floating-point number, natural number, empty
 string or a character string.
\end_layout

\begin_layout Standard
As indicated by the grammar, NIF supports multiple assignment.
 That is, multiple identifiers can be assigned in the same expression.
 For example, the expression
\end_layout

\begin_layout Standard
\align center

\family typewriter
material, temp = 9237, 300.0;
\end_layout

\begin_layout Standard
denotes that the identifier 
\family typewriter
material
\family default
 holds the integer 9237, and the identifier 
\family typewriter
temp
\family default
 holds the float 300.0.
\end_layout

\begin_layout Standard
Note that the number of elements on the left hand side of an assignment
 does not have to be equal to the number of elements on the right hand side.
 According to the grammar, an assignment such as
\end_layout

\begin_layout Standard
\align center

\family typewriter
material = 8225, 9237;
\end_layout

\begin_layout Standard
is allowed even though it does not make sense.
 However, the syntax analysis in the parser enforces that the number of
 elements on both sides are the same.
\end_layout

\begin_layout Subsubsection
NIF Example
\end_layout

\begin_layout Standard
For an example, in algorithm 3, the lines 1 through 7 in algorithm 1 are
 expressed in NIF.
\end_layout

\begin_layout Standard
\begin_inset Float algorithm
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset listings
lstparams "basicstyle={\normalsize\ttfamily},breaklines=true,numbers=left,numberstyle={\footnotesize},showstringspaces=false,tabsize=4"
inline false
status open

\begin_layout Plain Layout

acer {
\end_layout

\begin_layout Plain Layout

	card_1 {
\end_layout

\begin_layout Plain Layout

		endf_input = 20;
\end_layout

\begin_layout Plain Layout

		pendf_input = 21;
\end_layout

\begin_layout Plain Layout

		multigroup_photon_input = 0;
\end_layout

\begin_layout Plain Layout

		ace_output = 31;
\end_layout

\begin_layout Plain Layout

    	mcnp_directory_output = 32;
\end_layout

\begin_layout Plain Layout

	}
\end_layout

\begin_layout Plain Layout

	card_2 {
\end_layout

\begin_layout Plain Layout

		acer_run_option = 1;
\end_layout

\begin_layout Plain Layout

		print_control = 0;
\end_layout

\begin_layout Plain Layout

		ace_output_type = 1;
\end_layout

\begin_layout Plain Layout

	}
\end_layout

\begin_layout Plain Layout

	card_3 {
\end_layout

\begin_layout Plain Layout

		description = "proton + 7-n-14 apt la150 njoy99 mcnpx";
\end_layout

\begin_layout Plain Layout

	}
\end_layout

\begin_layout Plain Layout

	card_5 {
\end_layout

\begin_layout Plain Layout

		material = 725;
\end_layout

\begin_layout Plain Layout

		temperature = 0.0;
\end_layout

\begin_layout Plain Layout

	}
\end_layout

\begin_layout Plain Layout

	card_6 {}
\end_layout

\begin_layout Plain Layout

	card_7 {}
\end_layout

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
NIF version of 
\shape italic
Algorithm 1
\shape default
, lines 1-7
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Subsection
NJOY Input Format Translator (
\family typewriter
nifty
\family default
)
\end_layout

\begin_layout Subsubsection
Structure of the Translator
\end_layout

\begin_layout Standard
\begin_inset Wrap figure
lines 0
placement o
overhang 0in
width "40col%"
status open

\begin_layout Plain Layout
\paragraph_spacing single
\align center
\begin_inset Graphics
	filename C:/Users/ceh/Desktop/nifty.eps

\end_inset


\end_layout

\begin_layout Plain Layout
\paragraph_spacing single
\begin_inset Caption

\begin_layout Plain Layout
Translation process in nifty
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
The translator, NJOY Input Format Translator (nifty), was constructed as
 a set of modules where each module implements a specific phase in the translati
on process.
 Five phases have been implemented as part of the translation process and
 are shown in figure 1.
\end_layout

\begin_layout Standard
The first phase is the lexical analysis which is implemented by the lexer
 module.
 The second phase, syntax analysis, is implemented by the parser module.
\end_layout

\begin_layout Standard
The third phase, implemented by the organizer module, is a special phase
 which is not found in a translator as described in 
\begin_inset CommandInset citation
LatexCommand cite
key "key-5"

\end_inset

.
 The organizer is a phase where the order of the statements in a card are
 analysed and possible rearranged.
\end_layout

\begin_layout Standard
The fourth phase is the semantic analysis which is implemented by the module
 named analyzer.
 The fifth, and final, phase of the translator is the emitter module which
 implements a NJOY input instructions generator.
\end_layout

\begin_layout Subsubsection
Reserved Words
\end_layout

\begin_layout Standard
An important design choice is that the translator will enforce the use of
 reserved keywords to specify NIF programs.
 It will not only consider card and module names as reserved keywords, but
 also identifier names.
 As such, it is not possible to use an identifier name until it has been
 defined as an identifier in the translator.
 Similarly, it is not possible to use a card or module name which has not
 been defined in the translator.
 This restricts the expressiveness of the input format, but allows detailed
 analysis of the semantics in the organizer and analyzer modules.
\end_layout

\begin_layout Subsubsection
The Modules
\end_layout

\begin_layout Paragraph
Lexer
\end_layout

\begin_layout Standard
The lexer is responsible for recognizing character patterns and generating
 the appropriate NIF tokens.
 As input, the lexer expects a NIF program and will generate a token stream
 as its output unless the lexer detects a lexical error.
 If a lexical error is detected, an error message will be reported and the
 translation process will stop at this phase.
 The lexer will only recognize card and module names which are specified
 in 
\begin_inset CommandInset citation
LatexCommand cite
key "key-4"

\end_inset

, thus enforcing the use of a specific set of cards and modules as mentioned
 previously.
\end_layout

\begin_layout Paragraph
Parser
\end_layout

\begin_layout Standard
The parser is responsible of enforcing the structure of the NIF grammar
 and constructing the syntax tree.
 As input, the parser expects a token stream generated by the lexer.
 The parser will produce a syntax tree as its output, which represents the
 structure of the NIF program.
 If the parser detects a syntax error, an error message will be reported
 and the translation process will stop at this phase.
\end_layout

\begin_layout Paragraph
Organizer
\end_layout

\begin_layout Standard
The organizer analyses the syntax tree produced by the parser.
 Its purpose is to rearrange the statements in a card such that they appear
 in the expected, working order.
 As such, it should be possible to write a NIF program without having to
 list the statements in a card in the expected order as indicated by 
\begin_inset CommandInset citation
LatexCommand cite
key "key-4"

\end_inset

.
 The modules and cards still needs to be given in the correct order though.
\end_layout

\begin_layout Standard
Each module requires its own organizer implementation since each module
 has its specific set of rules as described in 
\begin_inset CommandInset citation
LatexCommand cite
key "key-4"

\end_inset

.
 Since the identifier names are hard coded into the translator, the organizer
 is able to do a detailed analysis of the syntax tree and easily detect
 if a specific identifier has been defined out of order.
\end_layout

\begin_layout Standard
If any statements have been provided out of order in a card, and the organizer
 is able to arrange the statements, a new syntax tree is returned where
 the statements have been ordered in the expected sequence.
 If the organizer somehow fails, it will return the original syntax tree
 as produced by the parser and pass it on to the next phase in the translator.
\end_layout

\begin_layout Paragraph
Analyzer
\end_layout

\begin_layout Standard
The analyzer expects a syntax tree as its input.
 Like in the organizer phase, the modules needs to be analysed separately
 since each module has its specific set of rules as described in 
\begin_inset CommandInset citation
LatexCommand cite
key "key-4"

\end_inset

.
 As such, each module requires its own analyzer implementation.
\end_layout

\begin_layout Standard
The analyzer basically visits every node in the order they appear in the
 syntax tree and checks if it is the expected one.
 The analysis can be made very detailed since the translator can, to some
 extent, predict the next card or identifier due the ordered nature in 
\begin_inset CommandInset citation
LatexCommand cite
key "key-4"

\end_inset

 and since the cards and the identifiers have reserved names.
 As such, it can in a simple fashion determine whether a card or an identifier
 has been defined or not and whether an identifier has been defined as the
 expected type, et cetera.
\end_layout

\begin_layout Standard
The analyzer does not alter the syntax tree, it just analyses it.
 The input syntax tree will be the output of the analyzer if the syntax
 tree is semantically correct according to the translator.
 If the analyzer detects a semantical error in the syntax tree, an error
 message will be reported and the translation process will stop at this
 phase.
\end_layout

\begin_layout Paragraph
Emitter
\end_layout

\begin_layout Standard
The emitter expects a syntax tree as its input and it is responsible for
 generating NJOY input instructions from the syntax tree.
 The emitter simply flattens the tree structure and formats the instructions
 to their corresponding counterparts in the NJOY input instructions format.
\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Section
Discussion
\end_layout

\begin_layout Standard
An organizer and analyzer has not been provided for all modules in the NJOY
 software system due to time constraints of this thesis.
 As such, the important semantic analysis of the translator is incomplete.
 However, much of the needed functionality and structure is provided by
 the existing implementation such that both the organizer and the analyzer
 should be easy to complete.
\end_layout

\begin_layout Standard
The implementation of the analyzer module has been the most time consuming
 task when designing the translator.
 It requires detailed analysis of what kind of input the modules expect
 and how they operate on it.
 To fully check the semantics of a NIF program, the source code for the
 NJOY software system must be studied in greater detail.
 The ENDF formats must also be studied in greater detail in order to understand
 the semantics of the NJOY modules.
\end_layout

\begin_layout Standard
The testing that was conducted within this work is not rigorous enough.
 NJOY is a large and complex program
\begin_inset Foot
status open

\begin_layout Plain Layout
The source files for the NJOY software system consists of more than 100
 000 lines.
\end_layout

\end_inset

.
 The NJOY test problems which were used to test the translation functionality
 is a very small set of possible NJOY jobs.
 Hence, there is a lot of possible scenarios that has not been tested.
\end_layout

\begin_layout Standard
\begin_inset Note Comment
status open

\begin_layout Itemize
Efficiency?
\end_layout

\begin_layout Itemize
Answer the 
\begin_inset Quotes eld
\end_inset

Why?
\begin_inset Quotes erd
\end_inset

 questions.
\end_layout

\begin_layout Itemize
Significant findings?
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Section
Conclusions
\end_layout

\begin_layout Itemize
Improvement on the existing situation?
\end_layout

\begin_deeper
\begin_layout Itemize
Readable?
\end_layout

\end_deeper
\begin_layout Itemize
Challenges?
\end_layout

\begin_deeper
\begin_layout Itemize
Constructing a decent input format.
\end_layout

\begin_layout Itemize
The physics (even if it's not within the scope).
 Documentation is full of it, kind of.
\end_layout

\end_deeper
\begin_layout Itemize
Usable?
\end_layout

\begin_deeper
\begin_layout Itemize
Production: not advisable.
 Grammar not verified.
 
\begin_inset Quotes eld
\end_inset

Toy
\begin_inset Quotes erd
\end_inset

 translator.
\end_layout

\end_deeper
\begin_layout Subsection
Future Work
\end_layout

\begin_layout Itemize
Possible improvements?
\end_layout

\begin_deeper
\begin_layout Itemize
Recognize more data-types.
 E.g.
 materials, temperatures, etc.
\end_layout

\end_deeper
\begin_layout Itemize
Complete context-free grammar?
\end_layout

\begin_deeper
\begin_layout Itemize
Expand grammar.
 More tokens (
\family typewriter
TEMPERATURE
\family default
, 
\family typewriter
MATERIAL
\family default
, etc).
\end_layout

\end_deeper
\begin_layout Itemize
GUI editor?
\end_layout

\begin_layout Itemize
Efficient implementation, e.g.
 C?
\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Bibliography
\paragraph_spacing single
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "key-1"

\end_inset

R.
 E.
 MacFarlane,
\shape italic
 
\shape default

\begin_inset Quotes eld
\end_inset

NJOY99 – code system for producing pointwise and multigroup neutron and
 photon cross-sections from ENDF/B data
\begin_inset Quotes erd
\end_inset

,
\shape italic
 
\shape default
Los Alamos Nat.
 Laboratory, Los Alamos, NM, Rep.
 RSIC PSR-480, 2000.
\end_layout

\begin_layout Bibliography
\paragraph_spacing single
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "key-2"

\end_inset

M.
 B.
 Chadwick 
\shape italic
et al.
\shape default
, 
\begin_inset Quotes eld
\end_inset

ENDF/B-VII.0: Next Generation Evaluated Nuclear Data Library for Nuclear
 Science and Technology,
\begin_inset Quotes erd
\end_inset

 
\shape italic
Nuclear Data Sheets
\shape default
, vol.
 107, no.
 12, pp.
 2931-3060, Dec.
 2006.
\end_layout

\begin_layout Bibliography
\paragraph_spacing single
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "key-3"

\end_inset

C.
 Gustavsson 
\shape italic
et al.
\shape default
, 
\begin_inset Quotes eld
\end_inset

Massive Computation Methodology for Reactor Operation (MACRO),
\begin_inset Quotes erd
\end_inset

 in 
\shape italic
European Nuclear Conference
\shape default
, 2010 © European Nuclear Society.
 ISBN: 978-92-95064-09-6
\end_layout

\begin_layout Bibliography
\paragraph_spacing single
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "key-4"

\end_inset

A.
 C.
 Kahler and R.
 E.
 MacFarlane.
 (2010, Mar.
 31).
 
\shape italic
User Input for NJOY99, updated through version 364
\shape default
 [Online].
 Available: 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://t2.lanl.gov/codes/njoy99/Userinp.364
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\paragraph_spacing single
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "key-5"

\end_inset

A.
 V.
 Aho 
\shape italic
et al.
\shape default
, 
\shape italic
Compilers: Principles, Techniques, & Tools
\shape default
, Second Edition.
 Boston: Pearson Educ., 2007.
\end_layout

\begin_layout Bibliography
\paragraph_spacing single
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "key-6"

\end_inset

A.
 V.
 Aho 
\shape italic
et al.
\shape default
, 
\begin_inset Quotes eld
\end_inset

Syntax Analysis
\begin_inset Quotes erd
\end_inset

 in 
\shape italic
Compilers: Principles, Techniques, & Tools
\shape default
, Second Edition.
 Boston: Pearson Educ., 2007, ch.
 4, sec.
 4.2, pp.
 197-206.
\end_layout

\begin_layout Bibliography
\paragraph_spacing single
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "key-7"

\end_inset

A.
 V.
 Aho 
\shape italic
et al.
\shape default
, 
\begin_inset Quotes eld
\end_inset

Lexical Analysis
\begin_inset Quotes erd
\end_inset

 in 
\shape italic
Compilers: Principles, Techniques, & Tools
\shape default
, Second Edition.
 Boston: Pearson Educ., 2007, ch.
 3, sec.
 3.5, pp.
 140-146.
\end_layout

\begin_layout Bibliography
\paragraph_spacing single
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "key-8"

\end_inset

A.
 V.
 Aho 
\shape italic
et al.
\shape default
, 
\begin_inset Quotes eld
\end_inset

Syntax Analysis
\begin_inset Quotes erd
\end_inset

 in 
\shape italic
Compilers: Principles, Techniques, & Tools
\shape default
, Second Edition.
 Boston: Pearson Educ., 2007, ch.
 4, sec.
 4.9, pp.
 287-297.
\end_layout

\begin_layout Bibliography
\paragraph_spacing single
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "key-9"

\end_inset

F.
 L.
 Drake, Jr., 
\shape italic
et al
\shape default
.
 (2011, Apr.
 16) 
\shape italic
Python v2.7.1 documentation
\shape default
 [Online].
 Available: 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://docs.python.org/
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\paragraph_spacing single
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "key-10"

\end_inset

A.
 V.
 Aho 
\shape italic
et al.
\shape default
, 
\begin_inset Quotes eld
\end_inset

Lexical Analysis
\begin_inset Quotes erd
\end_inset

 in 
\shape italic
Compilers: Principles, Techniques, & Tools
\shape default
, Second Edition.
 Boston: Pearson Educ., 2007, ch.
 3, sec.
 3.1, pp.
 109-114.
\end_layout

\begin_layout Bibliography
\paragraph_spacing single
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "key-11"

\end_inset

D.
 M.
 Beazley.
 (2011, Apr.
 16).
 
\shape italic
PLY (Python Lex-Yacc)
\shape default
 [Online].
 Available: 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://www.dabeaz.com/ply/ply.html
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\paragraph_spacing single
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "key-12"

\end_inset

A.
 V.
 Aho 
\shape italic
et al.
\shape default
, 
\begin_inset Quotes eld
\end_inset

Lexical Analysis
\begin_inset Quotes erd
\end_inset

 in 
\shape italic
Compilers: Principles, Techniques, & Tools
\shape default
, Second Edition.
 Boston: Pearson Educ., 2007, ch.
 3, sec.
 3.3, pp.
 116-124.
\end_layout

\begin_layout Bibliography
\paragraph_spacing single
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "key-13"

\end_inset

A.
 V.
 Aho 
\shape italic
et al.
\shape default
, 
\begin_inset Quotes eld
\end_inset

Syntax Analysis
\begin_inset Quotes erd
\end_inset

 in 
\shape italic
Compilers: Principles, Techniques, & Tools
\shape default
, Second Edition.
 Boston: Pearson Educ., 2007, ch.
 4, sec.
 4.1, pp.
 192-196.
\end_layout

\begin_layout Bibliography
\paragraph_spacing single
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "key-14"

\end_inset

A.
 V.
 Aho 
\shape italic
et al.
\shape default
, 
\begin_inset Quotes eld
\end_inset

Introduction
\begin_inset Quotes erd
\end_inset

 in 
\shape italic
Compilers: Principles, Techniques, & Tools
\shape default
, Second Edition.
 Boston: Pearson Educ., 2007, ch.
 1, sec.
 1.2, pp.
 8-9.
\end_layout

\end_body
\end_document
